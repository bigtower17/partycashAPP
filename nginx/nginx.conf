# Redirect all HTTP traffic to HTTPS
server {
    listen 80 default_server;
    server_name partycash.me www.partycash.me;
    return 301 https://$host$request_uri;
}

# HTTPS server block
server {
    listen 443 ssl;
    server_name partycash.me www.partycash.me;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/partycash.me/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/partycash.me/privkey.pem;

    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # HSTS header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Serve frontend (SPA)
    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Questo permette alla SPA di gestire routing interno come /login, /dashboard
        error_page 404 = /index.html;
    }

    # Proxy backend requests (tutte le chiamate che non sono file statici reali)
    location ~ ^/(auth|users|events|whatever-other-api-routes) {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
